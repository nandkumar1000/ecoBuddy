<style>
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  body {
    /* display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: radial-gradient(black 15%, transparent 16%) 0 0,
      radial-gradient(black 15%, transparent 16%) 1px 1px,
      radial-gradient(rgba(255, 255, 255, 0.1) 15%, transparent 20%) 0 1px,
      radial-gradient(rgba(255, 255, 255, 0.1) 15%, transparent 20%) 1px 1px;
    background-color: #000;
    background-size: 6px 6px; */
    cursor: none;
  }


  #cursor {
    position: fixed;
    top: calc(2rem * -0.5);
    left: calc(2rem * -0.5);
    pointer-events: none;
    mix-blend-mode: difference;
    filter: url(#goo);
    z-index: 100;
  }

  .cursor-circle {
    position: absolute;
    top: 0;
    left: 0;
    width: 2rem;
    height: 2rem;
    transform-origin: center center;
    border-radius: 2rem;
    background: #fff;
  }

  .goo {
    display: none;
  }
</style>
<svg xmlns="http://www.w3.org/2000/svg" class="goo" version="1.1" width="100%">
  <defs>
    <filter id="goo">
      <feGaussianBlur in="SourceGraphic" stdDeviation="6" result="blur"></feGaussianBlur>
      <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 35 -15" result="goo">
      </feColorMatrix>
      <feComposite in="SourceGraphic" in2="goo" operator="atop"></feComposite>
    </filter>
  </defs>
</svg>
<div id="cursor"></div>
<script>
  const TAIL_LENGTH = 30;
  const cursor = document.getElementById("cursor");

  let mouseX = 0;
  let mouseY = 0;

  let cursorCircles;
  let cursorHistory = Array(TAIL_LENGTH).fill({ x: 0, y: 0 });

  function onMouseMove(event) {
    mouseX = event.clientX;
    mouseY = event.clientY;
  }

  function onClick(event) {
    for (let i = 0; i < TAIL_LENGTH; i++) {
      cursorHistory[i].x += Math.random() * 100 - 50;
      cursorHistory[i].y += Math.random() * 100 - 50;
    }
  }

  function initCursor() {
    for (let i = 0; i < TAIL_LENGTH; i++) {
      let div = document.createElement("div");
      div.classList.add("cursor-circle");
      cursor.append(div);
    }
    cursorCircles = Array.from(document.querySelectorAll(".cursor-circle"));
  }

  function updateCursor() {
    cursorHistory.shift();
    cursorHistory.push({ x: mouseX, y: mouseY });

    for (let i = 0; i < TAIL_LENGTH; i++) {
      let current = cursorHistory[i];
      let next = cursorHistory[i + 1] || cursorHistory[TAIL_LENGTH - 1];

      let xDiff = next.x - current.x;
      let yDiff = next.y - current.y;

      current.x += xDiff * 0.35;
      current.y += yDiff * 0.35;
      cursorCircles[i].style.transform = `translate(${current.x}px, ${current.y
        }px) scale(${i / TAIL_LENGTH})`;
    }
    requestAnimationFrame(updateCursor);
  }

  document.addEventListener("mousemove", onMouseMove, false);
  document.addEventListener("click", onClick, false);

  initCursor();
  updateCursor();

</script>